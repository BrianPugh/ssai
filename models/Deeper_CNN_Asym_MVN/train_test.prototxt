name: "Deeper_CNN_Asym_MVN"
layer {
  name: "data"
  type: "PatchBasedSegmentationData"
  top: "data"
  top: "label"
  patch_based_segmentation_data_param {
    source: "../../data/mass_merged/lmdb/train.lmdb"
    batch_size: 128
    rand_skip: 128

    # data patch detail
    data_channels: 3
    data_height: 64
    data_width: 64

    # label patch detail
    label_channels: 3
    label_height: 16
    label_width: 16

    # augmentation
    rotation: true
    flip: true
    has_value: true
    skip_blank: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "data"
  type: "PatchBasedSegmentationData"
  top: "data"
  top: "label"
  patch_based_segmentation_data_param {
    source: "../../data/mass_merged/lmdb/test.lmdb"
    batch_size: 128
    rand_skip: 128

    # data patch detail
    data_channels: 3
    data_height: 64
    data_width: 64

    # label patch detail
    label_channels: 3
    label_height: 16
    label_width: 16

    # augmentation
    rotation: true
    flip: true
    has_value: true
    skip_blank: true
  }
  include: { phase: TEST }
}
layer {
  name: "mvn1"
  type: "MVN"
  bottom: "data"
  top: "mvn1"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "mvn1"
  top: "conv2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv2"
  top: "relu3"
}
layer {
  name: "mvn4"
  type: "MVN"
  bottom: "relu3"
  top: "mvn4"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "mvn4"
  top: "conv5"
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv5"
  top: "relu6"
}
layer {
  name: "mvn7"
  type: "MVN"
  bottom: "relu6"
  top: "mvn7"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "mvn7"
  top: "conv8"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv8"
  top: "relu9"
}
layer {
  name: "mvn10"
  type: "MVN"
  bottom: "relu9"
  top: "mvn10"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv11"
  type: "Convolution"
  bottom: "mvn10"
  top: "conv11"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu12"
  type: "ReLU"
  bottom: "conv11"
  top: "relu12"
}
layer {
  name: "mvn13"
  type: "MVN"
  bottom: "relu12"
  top: "mvn13"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv14"
  type: "Convolution"
  bottom: "mvn13"
  top: "conv14"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu15"
  type: "ReLU"
  bottom: "conv14"
  top: "relu15"
}
layer {
  name: "mvn16"
  type: "MVN"
  bottom: "relu15"
  top: "mvn16"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "conv17"
  type: "Convolution"
  bottom: "mvn16"
  top: "conv17"
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu18"
  type: "ReLU"
  bottom: "conv17"
  top: "relu18"
}
layer {
  name: "mvn19"
  type: "MVN"
  bottom: "relu18"
  top: "mvn19"
  mvn_param {
    normalize_variance: true
    across_channels: false
  }
}
layer {
  name: "fc20"
  type: "InnerProduct"
  bottom: "mvn19"
  top: "fc20"
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu21"
  type: "ReLU"
  bottom: "fc20"
  top: "relu21"
}
layer {
  name: "mvn22"
  type: "MVN"
  bottom: "relu21"
  top: "mvn22"
  mvn_param {
    normalize_variance: true
    across_channels: true
  }
}
layer {
  name: "fc23"
  type: "InnerProduct"
  bottom: "mvn22"
  top: "fc23"
  inner_product_param {
    num_output: 768
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "reshape24"
  type: "Reshape"
  bottom: "fc23"
  top: "reshape24"
  reshape_param {
    channels: 3
    height: 16
    width: 16
  }
}
layer {
  name: "predict_loss"
  type: "SoftmaxCrossEntropyLoss"
  bottom: "reshape24"
  bottom: "label"
  top: "predict_loss"
  loss_weight: 1
  softmax_cross_entropy_loss_param {
    weights: 0
    weights: 1.5
    weights: 1.5
  }
}
layer {
  name: "precision_recall_loss"
  type: "PrecisionRecallLoss"
  bottom: "reshape24"
  bottom: "label"
  top: "error_rate"
  include: { phase: TEST }
}
