name: "NoPooling_S_ReLU"
layer {
  name: "input_data"
  type: "Data"
  top: "input_data"
  data_param {
    backend: LMDB
    source: "../../data/mass_merged/lmdb/train_sat"
    batch_size: 64
  }
  include: { phase: TRAIN }
}
layer {
  name: "input_label"
  type: "Data"
  top: "input_label"
  data_param {
    backend: LMDB
    source: "../../data/mass_merged/lmdb/train_map"
    batch_size: 64
  }
  include: { phase: TRAIN }
}
layer {
  name: "input_data"
  type: "Data"
  top: "input_data"
  data_param {
    backend: LMDB
    source: "../../data/mass_merged/lmdb/test_sat"
    batch_size: 64
  }
  include: { phase: TEST }
}
layer {
  name: "input_label"
  type: "Data"
  top: "input_label"
  data_param {
    backend: LMDB
    source: "../../data/mass_merged/lmdb/test_map"
    batch_size: 64
  }
  include: { phase: TEST }
}
layer {
  name: "augment1"
  type: "Augment"
  bottom: "input_data"
  bottom: "input_label"
  top: "augment1"
  top: "label"
  augment_param {
    # common
    rotate: true
    # data
    crop_size: 64
    binarize: false
    mean_normalize: true
    divide: 48.519772
    divide: 46.991936
    divide: 49.015851
    # label
    crop_size: 16
    binarize: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "augment1"
  type: "Augment"
  bottom: "input_data"
  bottom: "input_label"
  top: "augment1"
  top: "label"
  augment_param {
    # data
    crop_size: 64
    binarize: false
    mean_normalize: true
    divide: 48.519772
    divide: 46.991936
    divide: 49.015851
    # label
    crop_size: 16
    binarize: true
  }
  include: { phase: TEST }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "augment1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 9
    stride: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv2"
  top: "relu3"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "relu3"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv5"
  top: "relu6"
}

layer {
  name: "conv7"
  type: "Convolution"
  bottom: "relu6"
  top: "conv7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 80
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu8"
  type: "ReLU"
  bottom: "conv7"
  top: "relu8"
}

layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "relu8"
  top: "fc9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu10"
  type: "ReLU"
  bottom: "fc9"
  top: "relu10"
}

layer {
  name: "fc102"
  type: "InnerProduct"
  bottom: "relu10"
  top: "fc102"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu102"
  type: "ReLU"
  bottom: "fc102"
  top: "relu102"
}

layer {
  name: "fc11"
  type: "InnerProduct"
  bottom: "relu102"
  top: "fc11"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 768
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "reshape12"
  type: "Reshape"
  bottom: "fc11"
  top: "reshape12"
  reshape_param {
    channels: 3
    height: 16
    width: 16
  }
}
layer {
  name: "predict_loss"
  type: "SoftmaxCrossEntropyLoss"
  bottom: "reshape12"
  bottom: "label"
  top: "predict_loss"
  loss_weight: 1
  softmax_cross_entropy_loss_param {
    weights: 0
    weights: 1.5
    weights: 1.5
  }
}
layer {
  name: "precision_recall_loss"
  type: "PrecisionRecallLoss"
  bottom: "reshape12"
  bottom: "label"
  top: "error_rate"
  include: { phase: TEST }
}

